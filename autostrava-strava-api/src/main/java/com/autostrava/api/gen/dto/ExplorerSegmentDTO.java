/*
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.autostrava.api.gen.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * ExplorerSegmentDTO
 */
@JsonPropertyOrder({
  ExplorerSegmentDTO.JSON_PROPERTY_ID,
  ExplorerSegmentDTO.JSON_PROPERTY_NAME,
  ExplorerSegmentDTO.JSON_PROPERTY_CLIMB_CATEGORY,
  ExplorerSegmentDTO.JSON_PROPERTY_CLIMB_CATEGORY_DESC,
  ExplorerSegmentDTO.JSON_PROPERTY_AVG_GRADE,
  ExplorerSegmentDTO.JSON_PROPERTY_START_LATLNG,
  ExplorerSegmentDTO.JSON_PROPERTY_END_LATLNG,
  ExplorerSegmentDTO.JSON_PROPERTY_ELEV_DIFFERENCE,
  ExplorerSegmentDTO.JSON_PROPERTY_DISTANCE,
  ExplorerSegmentDTO.JSON_PROPERTY_POINTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-11-17T18:37:28.613+01:00[Europe/Belgrade]")
public class ExplorerSegmentDTO {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_CLIMB_CATEGORY = "climb_category";
  private Integer climbCategory;

  /**
   * The description for the category of the climb
   */
  public enum ClimbCategoryDescEnum {
    NC("NC"),
    
    _4("4"),
    
    _3("3"),
    
    _2("2"),
    
    _1("1"),
    
    HC("HC");

    private String value;

    ClimbCategoryDescEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ClimbCategoryDescEnum fromValue(String value) {
      for (ClimbCategoryDescEnum b : ClimbCategoryDescEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CLIMB_CATEGORY_DESC = "climb_category_desc";
  private ClimbCategoryDescEnum climbCategoryDesc;

  public static final String JSON_PROPERTY_AVG_GRADE = "avg_grade";
  private Float avgGrade;

  public static final String JSON_PROPERTY_START_LATLNG = "start_latlng";
  private List<Float> startLatlng = null;

  public static final String JSON_PROPERTY_END_LATLNG = "end_latlng";
  private List<Float> endLatlng = null;

  public static final String JSON_PROPERTY_ELEV_DIFFERENCE = "elev_difference";
  private Float elevDifference;

  public static final String JSON_PROPERTY_DISTANCE = "distance";
  private Float distance;

  public static final String JSON_PROPERTY_POINTS = "points";
  private String points;


  public ExplorerSegmentDTO id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * The unique identifier of this segment
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique identifier of this segment")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public ExplorerSegmentDTO name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of this segment
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of this segment")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ExplorerSegmentDTO climbCategory(Integer climbCategory) {
    
    this.climbCategory = climbCategory;
    return this;
  }

   /**
   * The category of the climb [0, 5]. Higher is harder ie. 5 is Hors catégorie, 0 is uncategorized in climb_category. If climb_category &#x3D; 5, climb_category_desc &#x3D; HC. If climb_category &#x3D; 2, climb_category_desc &#x3D; 3.
   * minimum: 0
   * maximum: 5
   * @return climbCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The category of the climb [0, 5]. Higher is harder ie. 5 is Hors catégorie, 0 is uncategorized in climb_category. If climb_category = 5, climb_category_desc = HC. If climb_category = 2, climb_category_desc = 3.")
  @JsonProperty(JSON_PROPERTY_CLIMB_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getClimbCategory() {
    return climbCategory;
  }


  public void setClimbCategory(Integer climbCategory) {
    this.climbCategory = climbCategory;
  }


  public ExplorerSegmentDTO climbCategoryDesc(ClimbCategoryDescEnum climbCategoryDesc) {
    
    this.climbCategoryDesc = climbCategoryDesc;
    return this;
  }

   /**
   * The description for the category of the climb
   * @return climbCategoryDesc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description for the category of the climb")
  @JsonProperty(JSON_PROPERTY_CLIMB_CATEGORY_DESC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ClimbCategoryDescEnum getClimbCategoryDesc() {
    return climbCategoryDesc;
  }


  public void setClimbCategoryDesc(ClimbCategoryDescEnum climbCategoryDesc) {
    this.climbCategoryDesc = climbCategoryDesc;
  }


  public ExplorerSegmentDTO avgGrade(Float avgGrade) {
    
    this.avgGrade = avgGrade;
    return this;
  }

   /**
   * The segment&#39;s average grade, in percents
   * @return avgGrade
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The segment's average grade, in percents")
  @JsonProperty(JSON_PROPERTY_AVG_GRADE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getAvgGrade() {
    return avgGrade;
  }


  public void setAvgGrade(Float avgGrade) {
    this.avgGrade = avgGrade;
  }


  public ExplorerSegmentDTO startLatlng(List<Float> startLatlng) {
    
    this.startLatlng = startLatlng;
    return this;
  }

  public ExplorerSegmentDTO addStartLatlngItem(Float startLatlngItem) {
    if (this.startLatlng == null) {
      this.startLatlng = new ArrayList<>();
    }
    this.startLatlng.add(startLatlngItem);
    return this;
  }

   /**
   * A pair of latitude/longitude coordinates, represented as an array of 2 floating point numbers.
   * @return startLatlng
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A pair of latitude/longitude coordinates, represented as an array of 2 floating point numbers.")
  @JsonProperty(JSON_PROPERTY_START_LATLNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Float> getStartLatlng() {
    return startLatlng;
  }


  public void setStartLatlng(List<Float> startLatlng) {
    this.startLatlng = startLatlng;
  }


  public ExplorerSegmentDTO endLatlng(List<Float> endLatlng) {
    
    this.endLatlng = endLatlng;
    return this;
  }

  public ExplorerSegmentDTO addEndLatlngItem(Float endLatlngItem) {
    if (this.endLatlng == null) {
      this.endLatlng = new ArrayList<>();
    }
    this.endLatlng.add(endLatlngItem);
    return this;
  }

   /**
   * A pair of latitude/longitude coordinates, represented as an array of 2 floating point numbers.
   * @return endLatlng
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A pair of latitude/longitude coordinates, represented as an array of 2 floating point numbers.")
  @JsonProperty(JSON_PROPERTY_END_LATLNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Float> getEndLatlng() {
    return endLatlng;
  }


  public void setEndLatlng(List<Float> endLatlng) {
    this.endLatlng = endLatlng;
  }


  public ExplorerSegmentDTO elevDifference(Float elevDifference) {
    
    this.elevDifference = elevDifference;
    return this;
  }

   /**
   * The segments&#39;s evelation difference, in meters
   * @return elevDifference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The segments's evelation difference, in meters")
  @JsonProperty(JSON_PROPERTY_ELEV_DIFFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getElevDifference() {
    return elevDifference;
  }


  public void setElevDifference(Float elevDifference) {
    this.elevDifference = elevDifference;
  }


  public ExplorerSegmentDTO distance(Float distance) {
    
    this.distance = distance;
    return this;
  }

   /**
   * The segment&#39;s distance, in meters
   * @return distance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The segment's distance, in meters")
  @JsonProperty(JSON_PROPERTY_DISTANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getDistance() {
    return distance;
  }


  public void setDistance(Float distance) {
    this.distance = distance;
  }


  public ExplorerSegmentDTO points(String points) {
    
    this.points = points;
    return this;
  }

   /**
   * The polyline of the segment
   * @return points
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The polyline of the segment")
  @JsonProperty(JSON_PROPERTY_POINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPoints() {
    return points;
  }


  public void setPoints(String points) {
    this.points = points;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExplorerSegmentDTO explorerSegment = (ExplorerSegmentDTO) o;
    return Objects.equals(this.id, explorerSegment.id) &&
        Objects.equals(this.name, explorerSegment.name) &&
        Objects.equals(this.climbCategory, explorerSegment.climbCategory) &&
        Objects.equals(this.climbCategoryDesc, explorerSegment.climbCategoryDesc) &&
        Objects.equals(this.avgGrade, explorerSegment.avgGrade) &&
        Objects.equals(this.startLatlng, explorerSegment.startLatlng) &&
        Objects.equals(this.endLatlng, explorerSegment.endLatlng) &&
        Objects.equals(this.elevDifference, explorerSegment.elevDifference) &&
        Objects.equals(this.distance, explorerSegment.distance) &&
        Objects.equals(this.points, explorerSegment.points);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, climbCategory, climbCategoryDesc, avgGrade, startLatlng, endLatlng, elevDifference, distance, points);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExplorerSegmentDTO {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    climbCategory: ").append(toIndentedString(climbCategory)).append("\n");
    sb.append("    climbCategoryDesc: ").append(toIndentedString(climbCategoryDesc)).append("\n");
    sb.append("    avgGrade: ").append(toIndentedString(avgGrade)).append("\n");
    sb.append("    startLatlng: ").append(toIndentedString(startLatlng)).append("\n");
    sb.append("    endLatlng: ").append(toIndentedString(endLatlng)).append("\n");
    sb.append("    elevDifference: ").append(toIndentedString(elevDifference)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

